# stationary frequencies (1 free parameter):
#    pi[1] = character is in state 0
#    pi[2] = character is in state 1
pi ~ dnDirichlet([1,1])
pi.setValue( simplex(1,2) )

# rates (3 free parameters):
#    r[1] = 0->1 given the other character is 0
#    r[2] = 0->1 given the other character is 1
#    r[3] = 1->0 given the other character is 0
#    r[4] = 1->0 given the other character is 1
r ~ dnDirichlet( [1,1,1,1] )
r.setValue( simplex(1,3,3,1) )

# create empty array of rates
for (i in 1:4) {
    for (j in 1:4) {
        rates[i][j] <- 0.0
    }
}

# populate non-zero transition rates
rates[1][2] := r[1] * pi[2] * pi[1] # 00->10
rates[1][3] := r[1] * pi[1] * pi[2] # 00->01
rates[2][1] := r[3] * pi[1] * pi[1] # 10->00
rates[2][4] := r[2] * pi[2] * pi[2] # 10->11
rates[3][1] := r[2] * pi[1] * pi[1] # 01->00
rates[3][4] := r[3] * pi[2] * pi[2] # 01->11
rates[4][2] := r[4] * pi[2] * pi[1] # 11->10
rates[4][3] := r[4] * pi[1] * pi[2] # 11->01

# create the rate matrix
Q := fnFreeK(rates)

# transition probabilities for branch of length 0.1
P <- Q.getTransitionProbabilities(rate=0.1)
